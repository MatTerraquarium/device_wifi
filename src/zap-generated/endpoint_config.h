/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

// Prevent multiple inclusion
#pragma once

#include <app/util/endpoint-config-defines.h>
#include <lib/core/CHIPConfig.h>

// Default values for the attributes longer than a pointer,
// in a form of a binary blob
// Separate block is generated for big-endian and little-endian cases.
#if BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                     \
  {                                                                            \
                                                                               \
    /* Endpoint: 0, Cluster: General Commissioning (server), big-endian */     \
                                                                               \
    /* 0 - Breadcrumb, */                                                      \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,                            \
  }

#else // !BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                     \
  {                                                                            \
                                                                               \
    /* Endpoint: 0, Cluster: General Commissioning (server), little-endian */  \
                                                                               \
    /* 0 - Breadcrumb, */                                                      \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,                            \
  }

#endif // BIGENDIAN_CPU

#define GENERATED_DEFAULTS_COUNT (1)

// This is an array of EmberAfAttributeMinMaxValue structures.
#define GENERATED_MIN_MAX_DEFAULT_COUNT 7
#define GENERATED_MIN_MAX_DEFAULTS                                             \
  {                                                                            \
                                                                               \
    /* Endpoint: 1, Cluster: On/Off (server) */                                \
    {(uint16_t)0x0, (uint16_t)0x0, (uint16_t)0x2}, /* StartUpOnOff */          \
                                                                               \
        /* Endpoint: 1, Cluster: Level Control (server) */                     \
        {(uint16_t)0x0, (uint16_t)0x0, (uint16_t)0x3}, /* Options */           \
                                                                               \
        /* Endpoint: 2, Cluster: On/Off (server) */                            \
        {(uint16_t)0x0, (uint16_t)0x0, (uint16_t)0x2}, /* StartUpOnOff */      \
                                                                               \
        /* Endpoint: 3, Cluster: On/Off (server) */                            \
        {(uint16_t)0x0, (uint16_t)0x0, (uint16_t)0x2}, /* StartUpOnOff */      \
                                                                               \
        /* Endpoint: 4, Cluster: On/Off (server) */                            \
        {(uint16_t)0x0, (uint16_t)0x0, (uint16_t)0x2}, /* StartUpOnOff */      \
                                                                               \
        /* Endpoint: 5, Cluster: On/Off (server) */                            \
        {(uint16_t)0x0, (uint16_t)0x0, (uint16_t)0x2}, /* StartUpOnOff */      \
                                                                               \
    /* Endpoint: 6, Cluster: On/Off (server) */                                \
    {                                                                          \
      (uint16_t)0x0, (uint16_t)0x0, (uint16_t)0x2                              \
    } /* StartUpOnOff */                                                       \
  }

// This is an array of EmberAfAttributeMetadata structures.
#define GENERATED_ATTRIBUTE_COUNT 405
#define GENERATED_ATTRIBUTES                                                   \
  {                                                                            \
                                                                               \
    /* Endpoint: 0, Cluster: Descriptor (server) */                            \
    {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                      \
     ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_EMPTY_DEFAULT(), 0x0000FFFD, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClusterRevision */          \
                                                                               \
        /* Endpoint: 0, Cluster: Access Control (server) */                    \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* ACL */                          \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* Extension */                    \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* SubjectsPerAccessControlEntry */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* TargetsPerAccessControlEntry */            \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* AccessControlEntriesPerFabric */           \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: Basic Information (server) */                 \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* DataModelRevision */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 33, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* VendorName */                  \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 2, ZAP_TYPE(VENDOR_ID),              \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* VendorID */                    \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 33, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* ProductName */                 \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* ProductID */                   \
        {ZAP_EMPTY_DEFAULT(), 0x00000005, 33, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(TOKENIZE) | ZAP_ATTRIBUTE_MASK(SINGLETON) |        \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* NodeLabel */                    \
        {ZAP_EMPTY_DEFAULT(), 0x00000006, 3, ZAP_TYPE(CHAR_STRING),            \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON) |                                   \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* Location */                     \
        {ZAP_EMPTY_DEFAULT(), 0x00000007, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* HardwareVersion */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000008, 65, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* HardwareVersionString */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000009, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* SoftwareVersion */             \
        {ZAP_EMPTY_DEFAULT(), 0x0000000A, 65, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* SoftwareVersionString */       \
        {ZAP_EMPTY_DEFAULT(), 0x0000000B, 17, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* ManufacturingDate */           \
        {ZAP_EMPTY_DEFAULT(), 0x0000000F, 33, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* SerialNumber */                \
        {ZAP_EMPTY_DEFAULT(), 0x00000012, 33, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* UniqueID */                    \
        {ZAP_EMPTY_DEFAULT(), 0x00000013, 0, ZAP_TYPE(STRUCT),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* CapabilityMinima */         \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(SINGLETON)}, /* ClusterRevision */                 \
                                                                               \
        /* Endpoint: 0, Cluster: OTA Software Update Requestor (server) */     \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* DefaultOTAProviders */          \
        {ZAP_SIMPLE_DEFAULT(1), 0x00000001, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* UpdatePossible */                                              \
        {ZAP_SIMPLE_DEFAULT(0), 0x00000002, 1, ZAP_TYPE(ENUM8),                \
         0}, /* UpdateState */                                                 \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* UpdateStateProgress */              \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: General Commissioning (server) */             \
        {ZAP_LONG_DEFAULTS_INDEX(0), 0x00000000, 8, ZAP_TYPE(INT64U),          \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* Breadcrumb */                       \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(STRUCT),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* BasicCommissioningInfo */   \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RegulatoryConfig */         \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* LocationCapability */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 1, ZAP_TYPE(BOOLEAN),                \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* SupportsConcurrentConnection */            \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: Network Commissioning (server) */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* MaxNetworks */              \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* Networks */                 \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ScanMaxTimeSeconds */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ConnectMaxTimeSeconds */    \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 1, ZAP_TYPE(BOOLEAN),                \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* InterfaceEnabled */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000005, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* LastNetworkingStatus */         \
        {ZAP_EMPTY_DEFAULT(), 0x00000006, 33, ZAP_TYPE(OCTET_STRING),          \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* LastNetworkID */                \
        {ZAP_EMPTY_DEFAULT(), 0x00000007, 4, ZAP_TYPE(INT32S),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* LastConnectErrorValue */        \
        {ZAP_EMPTY_DEFAULT(), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),               \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* FeatureMap */               \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: General Diagnostics (server) */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* NetworkInterfaces */        \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RebootCount */              \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 8, ZAP_TYPE(INT64U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* UpTime */                   \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TotalOperationalHours */    \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* BootReason */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000008, 1, ZAP_TYPE(BOOLEAN),                \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TestEventTriggersEnabled */ \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: Software Diagnostics (server) */              \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 8, ZAP_TYPE(INT64U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* CurrentHeapFree */          \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 8, ZAP_TYPE(INT64U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* CurrentHeapUsed */          \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: Thread Network Diagnostics (server) */        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* Channel */                      \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* RoutingRole */                  \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 17, ZAP_TYPE(CHAR_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* NetworkName */                  \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* PanId */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 8, ZAP_TYPE(INT64U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* ExtendedPanId */                \
        {ZAP_EMPTY_DEFAULT(), 0x00000005, 18, ZAP_TYPE(OCTET_STRING),          \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MeshLocalPrefix */              \
        {ZAP_EMPTY_DEFAULT(), 0x00000006, 8, ZAP_TYPE(INT64U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* OverrunCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000007, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* NeighborTable */            \
        {ZAP_EMPTY_DEFAULT(), 0x00000008, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RouteTable */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000009, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* PartitionId */                  \
        {ZAP_EMPTY_DEFAULT(), 0x0000000A, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* Weighting */                    \
        {ZAP_EMPTY_DEFAULT(), 0x0000000B, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* DataVersion */                  \
        {ZAP_EMPTY_DEFAULT(), 0x0000000C, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StableDataVersion */            \
        {ZAP_EMPTY_DEFAULT(), 0x0000000D, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* LeaderRouterId */               \
        {ZAP_EMPTY_DEFAULT(), 0x0000000E, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DetachedRoleCount */        \
        {ZAP_EMPTY_DEFAULT(), 0x0000000F, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ChildRoleCount */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000010, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RouterRoleCount */          \
        {ZAP_EMPTY_DEFAULT(), 0x00000011, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* LeaderRoleCount */          \
        {ZAP_EMPTY_DEFAULT(), 0x00000012, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* AttachAttemptCount */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000013, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartitionIdChangeCount */   \
        {ZAP_EMPTY_DEFAULT(), 0x00000014, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* BetterPartitionAttachAttemptCount */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000015, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ParentChangeCount */        \
        {ZAP_EMPTY_DEFAULT(), 0x00000016, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxTotalCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000017, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxUnicastCount */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000018, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxBroadcastCount */         \
        {ZAP_EMPTY_DEFAULT(), 0x00000019, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxAckRequestedCount */      \
        {ZAP_EMPTY_DEFAULT(), 0x0000001A, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxAckedCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x0000001B, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxNoAckRequestedCount */    \
        {ZAP_EMPTY_DEFAULT(), 0x0000001C, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxDataCount */              \
        {ZAP_EMPTY_DEFAULT(), 0x0000001D, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxDataPollCount */          \
        {ZAP_EMPTY_DEFAULT(), 0x0000001E, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxBeaconCount */            \
        {ZAP_EMPTY_DEFAULT(), 0x0000001F, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxBeaconRequestCount */     \
        {ZAP_EMPTY_DEFAULT(), 0x00000020, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxOtherCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000021, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxRetryCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000022, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* TxDirectMaxRetryExpiryCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000023, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* TxIndirectMaxRetryExpiryCount */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000024, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxErrCcaCount */            \
        {ZAP_EMPTY_DEFAULT(), 0x00000025, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxErrAbortCount */          \
        {ZAP_EMPTY_DEFAULT(), 0x00000026, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TxErrBusyChannelCount */    \
        {ZAP_EMPTY_DEFAULT(), 0x00000027, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxTotalCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000028, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxUnicastCount */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000029, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxBroadcastCount */         \
        {ZAP_EMPTY_DEFAULT(), 0x0000002A, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxDataCount */              \
        {ZAP_EMPTY_DEFAULT(), 0x0000002B, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxDataPollCount */          \
        {ZAP_EMPTY_DEFAULT(), 0x0000002C, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxBeaconCount */            \
        {ZAP_EMPTY_DEFAULT(), 0x0000002D, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxBeaconRequestCount */     \
        {ZAP_EMPTY_DEFAULT(), 0x0000002E, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxOtherCount */             \
        {ZAP_EMPTY_DEFAULT(), 0x0000002F, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxAddressFilteredCount */   \
        {ZAP_EMPTY_DEFAULT(), 0x00000030, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxDestAddrFilteredCount */  \
        {ZAP_EMPTY_DEFAULT(), 0x00000031, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxDuplicatedCount */        \
        {ZAP_EMPTY_DEFAULT(), 0x00000032, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxErrNoFrameCount */        \
        {ZAP_EMPTY_DEFAULT(), 0x00000033, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(                                                   \
             EXTERNAL_STORAGE)}, /* RxErrUnknownNeighborCount */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000034, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxErrInvalidSrcAddrCount */ \
        {ZAP_EMPTY_DEFAULT(), 0x00000035, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxErrSecCount */            \
        {ZAP_EMPTY_DEFAULT(), 0x00000036, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxErrFcsCount */            \
        {ZAP_EMPTY_DEFAULT(), 0x00000037, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* RxErrOtherCount */          \
        {ZAP_EMPTY_DEFAULT(), 0x00000038, 8, ZAP_TYPE(INT64U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* ActiveTimestamp */              \
        {ZAP_EMPTY_DEFAULT(), 0x00000039, 8, ZAP_TYPE(INT64U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* PendingTimestamp */             \
        {ZAP_EMPTY_DEFAULT(), 0x0000003A, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* Delay */                        \
        {ZAP_EMPTY_DEFAULT(), 0x0000003B, 0, ZAP_TYPE(STRUCT),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* SecurityPolicy */               \
        {ZAP_EMPTY_DEFAULT(), 0x0000003C, 5, ZAP_TYPE(OCTET_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* ChannelPage0Mask */             \
        {ZAP_EMPTY_DEFAULT(), 0x0000003D, 0, ZAP_TYPE(STRUCT),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* OperationalDatasetComponents */ \
        {ZAP_EMPTY_DEFAULT(), 0x0000003E, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ActiveNetworkFaultsList */  \
        {ZAP_SIMPLE_DEFAULT(0x000F), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),        \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: WiFi Network Diagnostics (server) */          \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 7, ZAP_TYPE(OCTET_STRING),           \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* BSSID */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* SecurityType */                 \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* WiFiVersion */                  \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* ChannelNumber */                \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 1, ZAP_TYPE(INT8S),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* RSSI */                         \
        {ZAP_EMPTY_DEFAULT(), 0x00000006, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* BeaconRxCount */                \
        {ZAP_EMPTY_DEFAULT(), 0x00000007, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* PacketMulticastRxCount */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000008, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* PacketMulticastTxCount */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000009, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* PacketUnicastRxCount */         \
        {ZAP_EMPTY_DEFAULT(), 0x0000000A, 4, ZAP_TYPE(INT32U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* PacketUnicastTxCount */         \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x0001), 0x0000FFFD, 2, ZAP_TYPE(INT16U),          \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: Administrator Commissioning (server) */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(ENUM8),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* WindowStatus */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 1, ZAP_TYPE(FABRIC_IDX),             \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* AdminFabricIndex */             \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* AdminVendorId */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: Operational Credentials (server) */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* NOCs */                     \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* Fabrics */                  \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* SupportedFabrics */         \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* CommissionedFabrics */      \
        {ZAP_EMPTY_DEFAULT(), 0x00000004, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* TrustedRootCertificates */  \
        {ZAP_EMPTY_DEFAULT(), 0x00000005, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* CurrentFabricIndex */       \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 0, Cluster: Group Key Management (server) */              \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE) |                                \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* GroupKeyMap */                  \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* GroupTable */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* MaxGroupsPerFabric */       \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* MaxGroupKeysPerFabric */    \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 1, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 1, Cluster: Groups (server) */                            \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(BITMAP8),                \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 1, Cluster: Scenes (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000000, 1, ZAP_TYPE(INT8U),             \
         0}, /* SceneCount */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000001, 1, ZAP_TYPE(INT8U),             \
         0}, /* CurrentScene */                                                \
        {ZAP_SIMPLE_DEFAULT(0x0000), 0x00000002, 2, ZAP_TYPE(GROUP_ID),        \
         0}, /* CurrentGroup */                                                \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000003, 1, ZAP_TYPE(BOOLEAN),           \
         0}, /* SceneValid */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000004, 1, ZAP_TYPE(BITMAP8),           \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 1, Cluster: On/Off (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0), 0x00000000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* OnOff */                                                       \
        {ZAP_SIMPLE_DEFAULT(1), 0x00004000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* GlobalSceneControl */                                          \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004001, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OnTime */                           \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004002, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OffWaitTime */                      \
        {ZAP_MIN_MAX_DEFAULTS_INDEX(0), 0x00004003, 1, ZAP_TYPE(ENUM8),        \
         ZAP_ATTRIBUTE_MASK(MIN_MAX) | ZAP_ATTRIBUTE_MASK(WRITABLE) |          \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StartUpOnOff */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 1, Cluster: Level Control (server) */                     \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000000, 1, ZAP_TYPE(INT8U),             \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* CurrentLevel */                     \
        {ZAP_SIMPLE_DEFAULT(0x0000), 0x00000001, 2, ZAP_TYPE(INT16U),          \
         0}, /* RemainingTime */                                               \
        {ZAP_MIN_MAX_DEFAULTS_INDEX(1), 0x0000000F, 1, ZAP_TYPE(BITMAP8),      \
         ZAP_ATTRIBUTE_MASK(MIN_MAX) |                                         \
             ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* Options */                      \
        {ZAP_EMPTY_DEFAULT(), 0x00000011, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(WRITABLE) |                                        \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* OnLevel */                      \
        {ZAP_EMPTY_DEFAULT(), 0x00004000, 1, ZAP_TYPE(INT8U),                  \
         ZAP_ATTRIBUTE_MASK(WRITABLE) |                                        \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StartUpCurrentLevel */          \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(5), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 1, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 2, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 2, Cluster: Groups (server) */                            \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(BITMAP8),                \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 2, Cluster: Scenes (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000000, 1, ZAP_TYPE(INT8U),             \
         0}, /* SceneCount */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000001, 1, ZAP_TYPE(INT8U),             \
         0}, /* CurrentScene */                                                \
        {ZAP_SIMPLE_DEFAULT(0x0000), 0x00000002, 2, ZAP_TYPE(GROUP_ID),        \
         0}, /* CurrentGroup */                                                \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000003, 1, ZAP_TYPE(BOOLEAN),           \
         0}, /* SceneValid */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000004, 1, ZAP_TYPE(BITMAP8),           \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 2, Cluster: On/Off (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0), 0x00000000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* OnOff */                                                       \
        {ZAP_SIMPLE_DEFAULT(1), 0x00004000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* GlobalSceneControl */                                          \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004001, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OnTime */                           \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004002, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OffWaitTime */                      \
        {ZAP_MIN_MAX_DEFAULTS_INDEX(2), 0x00004003, 1, ZAP_TYPE(ENUM8),        \
         ZAP_ATTRIBUTE_MASK(MIN_MAX) | ZAP_ATTRIBUTE_MASK(WRITABLE) |          \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StartUpOnOff */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 2, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 3, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 3, Cluster: Groups (server) */                            \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(BITMAP8),                \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 3, Cluster: Scenes (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000000, 1, ZAP_TYPE(INT8U),             \
         0}, /* SceneCount */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000001, 1, ZAP_TYPE(INT8U),             \
         0}, /* CurrentScene */                                                \
        {ZAP_SIMPLE_DEFAULT(0x0000), 0x00000002, 2, ZAP_TYPE(GROUP_ID),        \
         0}, /* CurrentGroup */                                                \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000003, 1, ZAP_TYPE(BOOLEAN),           \
         0}, /* SceneValid */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000004, 1, ZAP_TYPE(BITMAP8),           \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 3, Cluster: On/Off (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0), 0x00000000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* OnOff */                                                       \
        {ZAP_SIMPLE_DEFAULT(1), 0x00004000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* GlobalSceneControl */                                          \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004001, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OnTime */                           \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004002, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OffWaitTime */                      \
        {ZAP_MIN_MAX_DEFAULTS_INDEX(3), 0x00004003, 1, ZAP_TYPE(ENUM8),        \
         ZAP_ATTRIBUTE_MASK(MIN_MAX) | ZAP_ATTRIBUTE_MASK(WRITABLE) |          \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StartUpOnOff */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 3, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 4, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 4, Cluster: Groups (server) */                            \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(BITMAP8),                \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 4, Cluster: Scenes (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000000, 1, ZAP_TYPE(INT8U),             \
         0}, /* SceneCount */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000001, 1, ZAP_TYPE(INT8U),             \
         0}, /* CurrentScene */                                                \
        {ZAP_SIMPLE_DEFAULT(0x0000), 0x00000002, 2, ZAP_TYPE(GROUP_ID),        \
         0}, /* CurrentGroup */                                                \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000003, 1, ZAP_TYPE(BOOLEAN),           \
         0}, /* SceneValid */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000004, 1, ZAP_TYPE(BITMAP8),           \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 4, Cluster: On/Off (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0), 0x00000000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* OnOff */                                                       \
        {ZAP_SIMPLE_DEFAULT(1), 0x00004000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* GlobalSceneControl */                                          \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004001, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OnTime */                           \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004002, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OffWaitTime */                      \
        {ZAP_MIN_MAX_DEFAULTS_INDEX(4), 0x00004003, 1, ZAP_TYPE(ENUM8),        \
         ZAP_ATTRIBUTE_MASK(MIN_MAX) | ZAP_ATTRIBUTE_MASK(WRITABLE) |          \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StartUpOnOff */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 4, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 5, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 5, Cluster: Groups (server) */                            \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(BITMAP8),                \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 5, Cluster: Scenes (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000000, 1, ZAP_TYPE(INT8U),             \
         0}, /* SceneCount */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000001, 1, ZAP_TYPE(INT8U),             \
         0}, /* CurrentScene */                                                \
        {ZAP_SIMPLE_DEFAULT(0x0000), 0x00000002, 2, ZAP_TYPE(GROUP_ID),        \
         0}, /* CurrentGroup */                                                \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000003, 1, ZAP_TYPE(BOOLEAN),           \
         0}, /* SceneValid */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000004, 1, ZAP_TYPE(BITMAP8),           \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 5, Cluster: On/Off (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0), 0x00000000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* OnOff */                                                       \
        {ZAP_SIMPLE_DEFAULT(1), 0x00004000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* GlobalSceneControl */                                          \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004001, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OnTime */                           \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004002, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OffWaitTime */                      \
        {ZAP_MIN_MAX_DEFAULTS_INDEX(5), 0x00004003, 1, ZAP_TYPE(ENUM8),        \
         ZAP_ATTRIBUTE_MASK(MIN_MAX) | ZAP_ATTRIBUTE_MASK(WRITABLE) |          \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StartUpOnOff */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 5, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 6, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 6, Cluster: Groups (server) */                            \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 1, ZAP_TYPE(BITMAP8),                \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 6, Cluster: Scenes (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000000, 1, ZAP_TYPE(INT8U),             \
         0}, /* SceneCount */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000001, 1, ZAP_TYPE(INT8U),             \
         0}, /* CurrentScene */                                                \
        {ZAP_SIMPLE_DEFAULT(0x0000), 0x00000002, 2, ZAP_TYPE(GROUP_ID),        \
         0}, /* CurrentGroup */                                                \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000003, 1, ZAP_TYPE(BOOLEAN),           \
         0}, /* SceneValid */                                                  \
        {ZAP_SIMPLE_DEFAULT(0x00), 0x00000004, 1, ZAP_TYPE(BITMAP8),           \
         0}, /* NameSupport */                                                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 6, Cluster: On/Off (server) */                            \
        {ZAP_SIMPLE_DEFAULT(0), 0x00000000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* OnOff */                                                       \
        {ZAP_SIMPLE_DEFAULT(1), 0x00004000, 1, ZAP_TYPE(BOOLEAN),              \
         0}, /* GlobalSceneControl */                                          \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004001, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OnTime */                           \
        {ZAP_SIMPLE_DEFAULT(0), 0x00004002, 2, ZAP_TYPE(INT16U),               \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* OffWaitTime */                      \
        {ZAP_MIN_MAX_DEFAULTS_INDEX(6), 0x00004003, 1, ZAP_TYPE(ENUM8),        \
         ZAP_ATTRIBUTE_MASK(MIN_MAX) | ZAP_ATTRIBUTE_MASK(WRITABLE) |          \
             ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* StartUpOnOff */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 6, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 7, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 7, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 7, Cluster: Temperature Measurement (server) */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 2, ZAP_TYPE(INT16S),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MeasuredValue */                    \
        {ZAP_SIMPLE_DEFAULT(0x8000), 0x00000001, 2, ZAP_TYPE(INT16S),          \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MinMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0x8000), 0x00000002, 2, ZAP_TYPE(INT16S),          \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MaxMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 8, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 8, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 8, Cluster: Relative Humidity Measurement (server) */     \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MeasuredValue */                    \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MinMeasuredValue */                 \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MaxMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(3), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 9, Cluster: Identify (server) */                          \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 9, Cluster: Descriptor (server) */                        \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 9, Cluster: Temperature Measurement (server) */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 2, ZAP_TYPE(INT16S),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MeasuredValue */                    \
        {ZAP_SIMPLE_DEFAULT(0x8000), 0x00000001, 2, ZAP_TYPE(INT16S),          \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MinMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0x8000), 0x00000002, 2, ZAP_TYPE(INT16S),          \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MaxMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 10, Cluster: Identify (server) */                         \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 10, Cluster: Descriptor (server) */                       \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 10, Cluster: Relative Humidity Measurement (server) */    \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MeasuredValue */                    \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MinMeasuredValue */                 \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 2, ZAP_TYPE(INT16U),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MaxMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(3), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 11, Cluster: Identify (server) */                         \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000000, 2, ZAP_TYPE(INT16U),             \
         ZAP_ATTRIBUTE_MASK(WRITABLE)}, /* IdentifyTime */                     \
        {ZAP_SIMPLE_DEFAULT(0x0), 0x00000001, 1, ZAP_TYPE(ENUM8),              \
         0}, /* IdentifyType */                                                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(4), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 11, Cluster: Descriptor (server) */                       \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* DeviceTypeList */           \
        {ZAP_EMPTY_DEFAULT(), 0x00000001, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ServerList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000002, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* ClientList */               \
        {ZAP_EMPTY_DEFAULT(), 0x00000003, 0, ZAP_TYPE(ARRAY),                  \
         ZAP_ATTRIBUTE_MASK(EXTERNAL_STORAGE)}, /* PartsList */                \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
                                                                               \
        /* Endpoint: 11, Cluster: Temperature Measurement (server) */          \
        {ZAP_EMPTY_DEFAULT(), 0x00000000, 2, ZAP_TYPE(INT16S),                 \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MeasuredValue */                    \
        {ZAP_SIMPLE_DEFAULT(0x8000), 0x00000001, 2, ZAP_TYPE(INT16S),          \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MinMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0x8000), 0x00000002, 2, ZAP_TYPE(INT16S),          \
         ZAP_ATTRIBUTE_MASK(NULLABLE)}, /* MaxMeasuredValue */                 \
        {ZAP_SIMPLE_DEFAULT(0), 0x0000FFFC, 4, ZAP_TYPE(BITMAP32),             \
         0}, /* FeatureMap */                                                  \
        {ZAP_SIMPLE_DEFAULT(1), 0x0000FFFD, 2, ZAP_TYPE(INT16U),               \
         0}, /* ClusterRevision */                                             \
  }

// clang-format off
#define GENERATED_EVENT_COUNT 6
#define GENERATED_EVENTS { \
  /* Endpoint: 0, Cluster: Basic Information (server) */ \
  /* EventList (index=0) */ \
  0x00000000, /* StartUp */ \
  0x00000001, /* ShutDown */ \
  0x00000002, /* Leave */ \
  /* Endpoint: 0, Cluster: OTA Software Update Requestor (server) */ \
  /* EventList (index=3) */ \
  0x00000000, /* StateTransition */ \
  0x00000001, /* VersionApplied */ \
  0x00000002, /* DownloadError */ \
}

// clang-format on

// Cluster function static arrays
#define GENERATED_FUNCTION_ARRAYS                                              \
  const EmberAfGenericClusterFunction chipFuncArrayIdentifyServer[] = {        \
      (EmberAfGenericClusterFunction)emberAfIdentifyClusterServerInitCallback, \
      (EmberAfGenericClusterFunction)                                          \
          MatterIdentifyClusterServerAttributeChangedCallback,                 \
  };                                                                           \
  const EmberAfGenericClusterFunction chipFuncArrayGroupsServer[] = {          \
      (EmberAfGenericClusterFunction)emberAfGroupsClusterServerInitCallback,   \
  };                                                                           \
  const EmberAfGenericClusterFunction chipFuncArrayScenesServer[] = {          \
      (EmberAfGenericClusterFunction)emberAfScenesClusterServerInitCallback,   \
  };                                                                           \
  const EmberAfGenericClusterFunction chipFuncArrayOnOffServer[] = {           \
      (EmberAfGenericClusterFunction)emberAfOnOffClusterServerInitCallback,    \
      (EmberAfGenericClusterFunction)MatterOnOffClusterServerShutdownCallback, \
  };                                                                           \
  const EmberAfGenericClusterFunction chipFuncArrayLevelControlServer[] = {    \
      (EmberAfGenericClusterFunction)                                          \
          emberAfLevelControlClusterServerInitCallback,                        \
      (EmberAfGenericClusterFunction)                                          \
          MatterLevelControlClusterServerShutdownCallback,                     \
  };

// clang-format off
#define GENERATED_COMMANDS { \
  /* Endpoint: 0, Cluster: OTA Software Update Requestor (server) */\
  /*   AcceptedCommandList (index=0) */ \
  0x00000000 /* AnnounceOTAProvider */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 0, Cluster: General Commissioning (server) */\
  /*   AcceptedCommandList (index=2) */ \
  0x00000000 /* ArmFailSafe */, \
  0x00000002 /* SetRegulatoryConfig */, \
  0x00000004 /* CommissioningComplete */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=6)*/ \
  0x00000001 /* ArmFailSafeResponse */, \
  0x00000003 /* SetRegulatoryConfigResponse */, \
  0x00000005 /* CommissioningCompleteResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 0, Cluster: Network Commissioning (server) */\
  /*   AcceptedCommandList (index=10) */ \
  0x00000000 /* ScanNetworks */, \
  0x00000002 /* AddOrUpdateWiFiNetwork */, \
  0x00000003 /* AddOrUpdateThreadNetwork */, \
  0x00000004 /* RemoveNetwork */, \
  0x00000006 /* ConnectNetwork */, \
  0x00000008 /* ReorderNetwork */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=17)*/ \
  0x00000001 /* ScanNetworksResponse */, \
  0x00000005 /* NetworkConfigResponse */, \
  0x00000007 /* ConnectNetworkResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 0, Cluster: General Diagnostics (server) */\
  /*   AcceptedCommandList (index=21) */ \
  0x00000000 /* TestEventTrigger */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 0, Cluster: Thread Network Diagnostics (server) */\
  /*   AcceptedCommandList (index=23) */ \
  0x00000000 /* ResetCounts */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 0, Cluster: Administrator Commissioning (server) */\
  /*   AcceptedCommandList (index=25) */ \
  0x00000000 /* OpenCommissioningWindow */, \
  0x00000001 /* OpenBasicCommissioningWindow */, \
  0x00000002 /* RevokeCommissioning */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 0, Cluster: Operational Credentials (server) */\
  /*   AcceptedCommandList (index=29) */ \
  0x00000000 /* AttestationRequest */, \
  0x00000002 /* CertificateChainRequest */, \
  0x00000004 /* CSRRequest */, \
  0x00000006 /* AddNOC */, \
  0x00000007 /* UpdateNOC */, \
  0x00000009 /* UpdateFabricLabel */, \
  0x0000000A /* RemoveFabric */, \
  0x0000000B /* AddTrustedRootCertificate */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=38)*/ \
  0x00000001 /* AttestationResponse */, \
  0x00000003 /* CertificateChainResponse */, \
  0x00000005 /* CSRResponse */, \
  0x00000008 /* NOCResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 0, Cluster: Group Key Management (server) */\
  /*   AcceptedCommandList (index=43) */ \
  0x00000000 /* KeySetWrite */, \
  0x00000001 /* KeySetRead */, \
  0x00000003 /* KeySetRemove */, \
  0x00000004 /* KeySetReadAllIndices */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=48)*/ \
  0x00000002 /* KeySetReadResponse */, \
  0x00000005 /* KeySetReadAllIndicesResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 1, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=51) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 1, Cluster: Groups (server) */\
  /*   AcceptedCommandList (index=54) */ \
  0x00000000 /* AddGroup */, \
  0x00000001 /* ViewGroup */, \
  0x00000002 /* GetGroupMembership */, \
  0x00000003 /* RemoveGroup */, \
  0x00000004 /* RemoveAllGroups */, \
  0x00000005 /* AddGroupIfIdentifying */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=61)*/ \
  0x00000000 /* AddGroupResponse */, \
  0x00000001 /* ViewGroupResponse */, \
  0x00000002 /* GetGroupMembershipResponse */, \
  0x00000003 /* RemoveGroupResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 1, Cluster: Scenes (server) */\
  /*   AcceptedCommandList (index=66) */ \
  0x00000000 /* AddScene */, \
  0x00000001 /* ViewScene */, \
  0x00000002 /* RemoveScene */, \
  0x00000003 /* RemoveAllScenes */, \
  0x00000004 /* StoreScene */, \
  0x00000005 /* RecallScene */, \
  0x00000006 /* GetSceneMembership */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=74)*/ \
  0x00000000 /* AddSceneResponse */, \
  0x00000001 /* ViewSceneResponse */, \
  0x00000002 /* RemoveSceneResponse */, \
  0x00000003 /* RemoveAllScenesResponse */, \
  0x00000004 /* StoreSceneResponse */, \
  0x00000006 /* GetSceneMembershipResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 1, Cluster: On/Off (server) */\
  /*   AcceptedCommandList (index=81) */ \
  0x00000000 /* Off */, \
  0x00000001 /* On */, \
  0x00000002 /* Toggle */, \
  0x00000040 /* OffWithEffect */, \
  0x00000041 /* OnWithRecallGlobalScene */, \
  0x00000042 /* OnWithTimedOff */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 1, Cluster: Level Control (server) */\
  /*   AcceptedCommandList (index=88) */ \
  0x00000000 /* MoveToLevel */, \
  0x00000001 /* Move */, \
  0x00000002 /* Step */, \
  0x00000003 /* Stop */, \
  0x00000004 /* MoveToLevelWithOnOff */, \
  0x00000005 /* MoveWithOnOff */, \
  0x00000006 /* StepWithOnOff */, \
  0x00000007 /* StopWithOnOff */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 2, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=97) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 2, Cluster: Groups (server) */\
  /*   AcceptedCommandList (index=100) */ \
  0x00000000 /* AddGroup */, \
  0x00000001 /* ViewGroup */, \
  0x00000002 /* GetGroupMembership */, \
  0x00000003 /* RemoveGroup */, \
  0x00000004 /* RemoveAllGroups */, \
  0x00000005 /* AddGroupIfIdentifying */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=107)*/ \
  0x00000000 /* AddGroupResponse */, \
  0x00000001 /* ViewGroupResponse */, \
  0x00000002 /* GetGroupMembershipResponse */, \
  0x00000003 /* RemoveGroupResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 2, Cluster: Scenes (server) */\
  /*   AcceptedCommandList (index=112) */ \
  0x00000000 /* AddScene */, \
  0x00000001 /* ViewScene */, \
  0x00000002 /* RemoveScene */, \
  0x00000003 /* RemoveAllScenes */, \
  0x00000004 /* StoreScene */, \
  0x00000005 /* RecallScene */, \
  0x00000006 /* GetSceneMembership */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=120)*/ \
  0x00000000 /* AddSceneResponse */, \
  0x00000001 /* ViewSceneResponse */, \
  0x00000002 /* RemoveSceneResponse */, \
  0x00000003 /* RemoveAllScenesResponse */, \
  0x00000004 /* StoreSceneResponse */, \
  0x00000006 /* GetSceneMembershipResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 2, Cluster: On/Off (server) */\
  /*   AcceptedCommandList (index=127) */ \
  0x00000000 /* Off */, \
  0x00000001 /* On */, \
  0x00000002 /* Toggle */, \
  0x00000040 /* OffWithEffect */, \
  0x00000041 /* OnWithRecallGlobalScene */, \
  0x00000042 /* OnWithTimedOff */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 3, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=134) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 3, Cluster: Groups (server) */\
  /*   AcceptedCommandList (index=137) */ \
  0x00000000 /* AddGroup */, \
  0x00000001 /* ViewGroup */, \
  0x00000002 /* GetGroupMembership */, \
  0x00000003 /* RemoveGroup */, \
  0x00000004 /* RemoveAllGroups */, \
  0x00000005 /* AddGroupIfIdentifying */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=144)*/ \
  0x00000000 /* AddGroupResponse */, \
  0x00000001 /* ViewGroupResponse */, \
  0x00000002 /* GetGroupMembershipResponse */, \
  0x00000003 /* RemoveGroupResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 3, Cluster: Scenes (server) */\
  /*   AcceptedCommandList (index=149) */ \
  0x00000000 /* AddScene */, \
  0x00000001 /* ViewScene */, \
  0x00000002 /* RemoveScene */, \
  0x00000003 /* RemoveAllScenes */, \
  0x00000004 /* StoreScene */, \
  0x00000005 /* RecallScene */, \
  0x00000006 /* GetSceneMembership */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=157)*/ \
  0x00000000 /* AddSceneResponse */, \
  0x00000001 /* ViewSceneResponse */, \
  0x00000002 /* RemoveSceneResponse */, \
  0x00000003 /* RemoveAllScenesResponse */, \
  0x00000004 /* StoreSceneResponse */, \
  0x00000006 /* GetSceneMembershipResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 3, Cluster: On/Off (server) */\
  /*   AcceptedCommandList (index=164) */ \
  0x00000000 /* Off */, \
  0x00000001 /* On */, \
  0x00000002 /* Toggle */, \
  0x00000040 /* OffWithEffect */, \
  0x00000041 /* OnWithRecallGlobalScene */, \
  0x00000042 /* OnWithTimedOff */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 4, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=171) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 4, Cluster: Groups (server) */\
  /*   AcceptedCommandList (index=174) */ \
  0x00000000 /* AddGroup */, \
  0x00000001 /* ViewGroup */, \
  0x00000002 /* GetGroupMembership */, \
  0x00000003 /* RemoveGroup */, \
  0x00000004 /* RemoveAllGroups */, \
  0x00000005 /* AddGroupIfIdentifying */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=181)*/ \
  0x00000000 /* AddGroupResponse */, \
  0x00000001 /* ViewGroupResponse */, \
  0x00000002 /* GetGroupMembershipResponse */, \
  0x00000003 /* RemoveGroupResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 4, Cluster: Scenes (server) */\
  /*   AcceptedCommandList (index=186) */ \
  0x00000000 /* AddScene */, \
  0x00000001 /* ViewScene */, \
  0x00000002 /* RemoveScene */, \
  0x00000003 /* RemoveAllScenes */, \
  0x00000004 /* StoreScene */, \
  0x00000005 /* RecallScene */, \
  0x00000006 /* GetSceneMembership */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=194)*/ \
  0x00000000 /* AddSceneResponse */, \
  0x00000001 /* ViewSceneResponse */, \
  0x00000002 /* RemoveSceneResponse */, \
  0x00000003 /* RemoveAllScenesResponse */, \
  0x00000004 /* StoreSceneResponse */, \
  0x00000006 /* GetSceneMembershipResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 4, Cluster: On/Off (server) */\
  /*   AcceptedCommandList (index=201) */ \
  0x00000000 /* Off */, \
  0x00000001 /* On */, \
  0x00000002 /* Toggle */, \
  0x00000040 /* OffWithEffect */, \
  0x00000041 /* OnWithRecallGlobalScene */, \
  0x00000042 /* OnWithTimedOff */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 5, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=208) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 5, Cluster: Groups (server) */\
  /*   AcceptedCommandList (index=211) */ \
  0x00000000 /* AddGroup */, \
  0x00000001 /* ViewGroup */, \
  0x00000002 /* GetGroupMembership */, \
  0x00000003 /* RemoveGroup */, \
  0x00000004 /* RemoveAllGroups */, \
  0x00000005 /* AddGroupIfIdentifying */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=218)*/ \
  0x00000000 /* AddGroupResponse */, \
  0x00000001 /* ViewGroupResponse */, \
  0x00000002 /* GetGroupMembershipResponse */, \
  0x00000003 /* RemoveGroupResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 5, Cluster: Scenes (server) */\
  /*   AcceptedCommandList (index=223) */ \
  0x00000000 /* AddScene */, \
  0x00000001 /* ViewScene */, \
  0x00000002 /* RemoveScene */, \
  0x00000003 /* RemoveAllScenes */, \
  0x00000004 /* StoreScene */, \
  0x00000005 /* RecallScene */, \
  0x00000006 /* GetSceneMembership */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=231)*/ \
  0x00000000 /* AddSceneResponse */, \
  0x00000001 /* ViewSceneResponse */, \
  0x00000002 /* RemoveSceneResponse */, \
  0x00000003 /* RemoveAllScenesResponse */, \
  0x00000004 /* StoreSceneResponse */, \
  0x00000006 /* GetSceneMembershipResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 5, Cluster: On/Off (server) */\
  /*   AcceptedCommandList (index=238) */ \
  0x00000000 /* Off */, \
  0x00000001 /* On */, \
  0x00000002 /* Toggle */, \
  0x00000040 /* OffWithEffect */, \
  0x00000041 /* OnWithRecallGlobalScene */, \
  0x00000042 /* OnWithTimedOff */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 6, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=245) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 6, Cluster: Groups (server) */\
  /*   AcceptedCommandList (index=248) */ \
  0x00000000 /* AddGroup */, \
  0x00000001 /* ViewGroup */, \
  0x00000002 /* GetGroupMembership */, \
  0x00000003 /* RemoveGroup */, \
  0x00000004 /* RemoveAllGroups */, \
  0x00000005 /* AddGroupIfIdentifying */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=255)*/ \
  0x00000000 /* AddGroupResponse */, \
  0x00000001 /* ViewGroupResponse */, \
  0x00000002 /* GetGroupMembershipResponse */, \
  0x00000003 /* RemoveGroupResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 6, Cluster: Scenes (server) */\
  /*   AcceptedCommandList (index=260) */ \
  0x00000000 /* AddScene */, \
  0x00000001 /* ViewScene */, \
  0x00000002 /* RemoveScene */, \
  0x00000003 /* RemoveAllScenes */, \
  0x00000004 /* StoreScene */, \
  0x00000005 /* RecallScene */, \
  0x00000006 /* GetSceneMembership */, \
  chip::kInvalidCommandId /* end of list */, \
  /*   GeneratedCommandList (index=268)*/ \
  0x00000000 /* AddSceneResponse */, \
  0x00000001 /* ViewSceneResponse */, \
  0x00000002 /* RemoveSceneResponse */, \
  0x00000003 /* RemoveAllScenesResponse */, \
  0x00000004 /* StoreSceneResponse */, \
  0x00000006 /* GetSceneMembershipResponse */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 6, Cluster: On/Off (server) */\
  /*   AcceptedCommandList (index=275) */ \
  0x00000000 /* Off */, \
  0x00000001 /* On */, \
  0x00000002 /* Toggle */, \
  0x00000040 /* OffWithEffect */, \
  0x00000041 /* OnWithRecallGlobalScene */, \
  0x00000042 /* OnWithTimedOff */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 7, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=282) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 8, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=285) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 9, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=288) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 10, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=291) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
  /* Endpoint: 11, Cluster: Identify (server) */\
  /*   AcceptedCommandList (index=294) */ \
  0x00000000 /* Identify */, \
  0x00000040 /* TriggerEffect */, \
  chip::kInvalidCommandId /* end of list */, \
}

// clang-format on

// This is an array of EmberAfCluster structures.
#define GENERATED_CLUSTER_COUNT 60
// clang-format off
#define GENERATED_CLUSTERS { \
  { \
      /* Endpoint: 0, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(0), \
      .attributeCount = 6, \
      .clusterSize = 4, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Access Control (server) */ \
      .clusterId = 0x0000001F, \
      .attributes = ZAP_ATTRIBUTE_INDEX(6), \
      .attributeCount = 7, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Basic Information (server) */ \
      .clusterId = 0x00000028, \
      .attributes = ZAP_ATTRIBUTE_INDEX(13), \
      .attributeCount = 17, \
      .clusterSize = 39, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = ZAP_GENERATED_EVENTS_INDEX( 0 ), \
      .eventCount = 3, \
    },\
  { \
      /* Endpoint: 0, Cluster: OTA Software Update Provider (client) */ \
      .clusterId = 0x00000029, \
      .attributes = ZAP_ATTRIBUTE_INDEX(30), \
      .attributeCount = 0, \
      .clusterSize = 0, \
      .mask = ZAP_CLUSTER_MASK(CLIENT), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: OTA Software Update Requestor (server) */ \
      .clusterId = 0x0000002A, \
      .attributes = ZAP_ATTRIBUTE_INDEX(30), \
      .attributeCount = 6, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 0 ), \
      .generatedCommandList = nullptr, \
      .eventList = ZAP_GENERATED_EVENTS_INDEX( 3 ), \
      .eventCount = 3, \
    },\
  { \
      /* Endpoint: 0, Cluster: General Commissioning (server) */ \
      .clusterId = 0x00000030, \
      .attributes = ZAP_ATTRIBUTE_INDEX(36), \
      .attributeCount = 7, \
      .clusterSize = 14, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 2 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 6 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Network Commissioning (server) */ \
      .clusterId = 0x00000031, \
      .attributes = ZAP_ATTRIBUTE_INDEX(43), \
      .attributeCount = 10, \
      .clusterSize = 2, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 10 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 17 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: General Diagnostics (server) */ \
      .clusterId = 0x00000033, \
      .attributes = ZAP_ATTRIBUTE_INDEX(53), \
      .attributeCount = 8, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 21 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Software Diagnostics (server) */ \
      .clusterId = 0x00000034, \
      .attributes = ZAP_ATTRIBUTE_INDEX(61), \
      .attributeCount = 4, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Thread Network Diagnostics (server) */ \
      .clusterId = 0x00000035, \
      .attributes = ZAP_ATTRIBUTE_INDEX(65), \
      .attributeCount = 65, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 23 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: WiFi Network Diagnostics (server) */ \
      .clusterId = 0x00000036, \
      .attributes = ZAP_ATTRIBUTE_INDEX(130), \
      .attributeCount = 12, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Administrator Commissioning (server) */ \
      .clusterId = 0x0000003C, \
      .attributes = ZAP_ATTRIBUTE_INDEX(142), \
      .attributeCount = 5, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 25 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Operational Credentials (server) */ \
      .clusterId = 0x0000003E, \
      .attributes = ZAP_ATTRIBUTE_INDEX(147), \
      .attributeCount = 8, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 29 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 38 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 0, Cluster: Group Key Management (server) */ \
      .clusterId = 0x0000003F, \
      .attributes = ZAP_ATTRIBUTE_INDEX(155), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 43 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 48 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 1, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(161), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 51 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 1, Cluster: Groups (server) */ \
      .clusterId = 0x00000004, \
      .attributes = ZAP_ATTRIBUTE_INDEX(165), \
      .attributeCount = 3, \
      .clusterSize = 7, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayGroupsServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 54 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 61 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 1, Cluster: Scenes (server) */ \
      .clusterId = 0x00000005, \
      .attributes = ZAP_ATTRIBUTE_INDEX(168), \
      .attributeCount = 7, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayScenesServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 66 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 74 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 1, Cluster: On/Off (server) */ \
      .clusterId = 0x00000006, \
      .attributes = ZAP_ATTRIBUTE_INDEX(175), \
      .attributeCount = 7, \
      .clusterSize = 13, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(SHUTDOWN_FUNCTION), \
      .functions = chipFuncArrayOnOffServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 81 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 1, Cluster: Level Control (server) */ \
      .clusterId = 0x00000008, \
      .attributes = ZAP_ATTRIBUTE_INDEX(182), \
      .attributeCount = 7, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(SHUTDOWN_FUNCTION), \
      .functions = chipFuncArrayLevelControlServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 88 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 1, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(189), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 2, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(195), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 97 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 2, Cluster: Groups (server) */ \
      .clusterId = 0x00000004, \
      .attributes = ZAP_ATTRIBUTE_INDEX(199), \
      .attributeCount = 3, \
      .clusterSize = 7, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayGroupsServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 100 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 107 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 2, Cluster: Scenes (server) */ \
      .clusterId = 0x00000005, \
      .attributes = ZAP_ATTRIBUTE_INDEX(202), \
      .attributeCount = 7, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayScenesServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 112 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 120 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 2, Cluster: On/Off (server) */ \
      .clusterId = 0x00000006, \
      .attributes = ZAP_ATTRIBUTE_INDEX(209), \
      .attributeCount = 7, \
      .clusterSize = 13, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(SHUTDOWN_FUNCTION), \
      .functions = chipFuncArrayOnOffServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 127 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 2, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(216), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 3, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(222), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 134 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 3, Cluster: Groups (server) */ \
      .clusterId = 0x00000004, \
      .attributes = ZAP_ATTRIBUTE_INDEX(226), \
      .attributeCount = 3, \
      .clusterSize = 7, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayGroupsServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 137 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 144 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 3, Cluster: Scenes (server) */ \
      .clusterId = 0x00000005, \
      .attributes = ZAP_ATTRIBUTE_INDEX(229), \
      .attributeCount = 7, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayScenesServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 149 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 157 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 3, Cluster: On/Off (server) */ \
      .clusterId = 0x00000006, \
      .attributes = ZAP_ATTRIBUTE_INDEX(236), \
      .attributeCount = 7, \
      .clusterSize = 13, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(SHUTDOWN_FUNCTION), \
      .functions = chipFuncArrayOnOffServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 164 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 3, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(243), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 4, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(249), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 171 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 4, Cluster: Groups (server) */ \
      .clusterId = 0x00000004, \
      .attributes = ZAP_ATTRIBUTE_INDEX(253), \
      .attributeCount = 3, \
      .clusterSize = 7, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayGroupsServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 174 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 181 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 4, Cluster: Scenes (server) */ \
      .clusterId = 0x00000005, \
      .attributes = ZAP_ATTRIBUTE_INDEX(256), \
      .attributeCount = 7, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayScenesServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 186 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 194 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 4, Cluster: On/Off (server) */ \
      .clusterId = 0x00000006, \
      .attributes = ZAP_ATTRIBUTE_INDEX(263), \
      .attributeCount = 7, \
      .clusterSize = 13, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(SHUTDOWN_FUNCTION), \
      .functions = chipFuncArrayOnOffServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 201 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 4, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(270), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 5, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(276), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 208 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 5, Cluster: Groups (server) */ \
      .clusterId = 0x00000004, \
      .attributes = ZAP_ATTRIBUTE_INDEX(280), \
      .attributeCount = 3, \
      .clusterSize = 7, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayGroupsServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 211 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 218 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 5, Cluster: Scenes (server) */ \
      .clusterId = 0x00000005, \
      .attributes = ZAP_ATTRIBUTE_INDEX(283), \
      .attributeCount = 7, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayScenesServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 223 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 231 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 5, Cluster: On/Off (server) */ \
      .clusterId = 0x00000006, \
      .attributes = ZAP_ATTRIBUTE_INDEX(290), \
      .attributeCount = 7, \
      .clusterSize = 13, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(SHUTDOWN_FUNCTION), \
      .functions = chipFuncArrayOnOffServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 238 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 5, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(297), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 6, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(303), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 245 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 6, Cluster: Groups (server) */ \
      .clusterId = 0x00000004, \
      .attributes = ZAP_ATTRIBUTE_INDEX(307), \
      .attributeCount = 3, \
      .clusterSize = 7, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayGroupsServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 248 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 255 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 6, Cluster: Scenes (server) */ \
      .clusterId = 0x00000005, \
      .attributes = ZAP_ATTRIBUTE_INDEX(310), \
      .attributeCount = 7, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION), \
      .functions = chipFuncArrayScenesServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 260 ), \
      .generatedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 268 ), \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 6, Cluster: On/Off (server) */ \
      .clusterId = 0x00000006, \
      .attributes = ZAP_ATTRIBUTE_INDEX(317), \
      .attributeCount = 7, \
      .clusterSize = 13, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(SHUTDOWN_FUNCTION), \
      .functions = chipFuncArrayOnOffServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 275 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 6, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(324), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 7, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(330), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 282 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 7, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(334), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 7, Cluster: Temperature Measurement (server) */ \
      .clusterId = 0x00000402, \
      .attributes = ZAP_ATTRIBUTE_INDEX(340), \
      .attributeCount = 5, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 8, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(345), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 285 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 8, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(349), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 8, Cluster: Relative Humidity Measurement (server) */ \
      .clusterId = 0x00000405, \
      .attributes = ZAP_ATTRIBUTE_INDEX(355), \
      .attributeCount = 5, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 9, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(360), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 288 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 9, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(364), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 9, Cluster: Temperature Measurement (server) */ \
      .clusterId = 0x00000402, \
      .attributes = ZAP_ATTRIBUTE_INDEX(370), \
      .attributeCount = 5, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 10, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(375), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 291 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 10, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(379), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 10, Cluster: Relative Humidity Measurement (server) */ \
      .clusterId = 0x00000405, \
      .attributes = ZAP_ATTRIBUTE_INDEX(385), \
      .attributeCount = 5, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 11, Cluster: Identify (server) */ \
      .clusterId = 0x00000003, \
      .attributes = ZAP_ATTRIBUTE_INDEX(390), \
      .attributeCount = 4, \
      .clusterSize = 9, \
      .mask = ZAP_CLUSTER_MASK(SERVER) | ZAP_CLUSTER_MASK(INIT_FUNCTION) | ZAP_CLUSTER_MASK(ATTRIBUTE_CHANGED_FUNCTION), \
      .functions = chipFuncArrayIdentifyServer, \
      .acceptedCommandList = ZAP_GENERATED_COMMANDS_INDEX( 294 ), \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 11, Cluster: Descriptor (server) */ \
      .clusterId = 0x0000001D, \
      .attributes = ZAP_ATTRIBUTE_INDEX(394), \
      .attributeCount = 6, \
      .clusterSize = 6, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
  { \
      /* Endpoint: 11, Cluster: Temperature Measurement (server) */ \
      .clusterId = 0x00000402, \
      .attributes = ZAP_ATTRIBUTE_INDEX(400), \
      .attributeCount = 5, \
      .clusterSize = 12, \
      .mask = ZAP_CLUSTER_MASK(SERVER), \
      .functions = NULL, \
      .acceptedCommandList = nullptr, \
      .generatedCommandList = nullptr, \
      .eventList = nullptr, \
      .eventCount = 0, \
    },\
}

// clang-format on

#define ZAP_FIXED_ENDPOINT_DATA_VERSION_COUNT 59

// This is an array of EmberAfEndpointType structures.
#define GENERATED_ENDPOINT_TYPES                                               \
  {                                                                            \
    {ZAP_CLUSTER_INDEX(0), 14, 116}, {ZAP_CLUSTER_INDEX(14), 6, 59},           \
        {ZAP_CLUSTER_INDEX(20), 5, 47}, {ZAP_CLUSTER_INDEX(25), 5, 47},        \
        {ZAP_CLUSTER_INDEX(30), 5, 47}, {ZAP_CLUSTER_INDEX(35), 5, 47},        \
        {ZAP_CLUSTER_INDEX(40), 5, 47}, {ZAP_CLUSTER_INDEX(45), 3, 27},        \
        {ZAP_CLUSTER_INDEX(48), 3, 27}, {ZAP_CLUSTER_INDEX(51), 3, 27},        \
        {ZAP_CLUSTER_INDEX(54), 3, 27}, {ZAP_CLUSTER_INDEX(57), 3, 27},        \
  }

// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (66)

static_assert(ATTRIBUTE_LARGEST <= CHIP_CONFIG_MAX_ATTRIBUTE_STORE_ELEMENT_SIZE,
              "ATTRIBUTE_LARGEST larger than expected");

// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (35)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE (545)

// Number of fixed endpoints
#define FIXED_ENDPOINT_COUNT (12)

// Array of endpoints that are supported, the data inside
// the array is the endpoint number.
#define FIXED_ENDPOINT_ARRAY                                                   \
  {                                                                            \
    0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008,    \
        0x0009, 0x000A, 0x000B                                                 \
  }

// Array of profile ids
#define FIXED_PROFILE_IDS                                                      \
  {                                                                            \
    0x0103, 0x0103, 0x0103, 0x0103, 0x0103, 0x0103, 0x0103, 0x0103, 0x0103,    \
        0x0103, 0x0103, 0x0103                                                 \
  }

// Array of device types
#define FIXED_DEVICE_TYPES                                                     \
  {                                                                            \
    {0x0016, 1}, {0x0101, 1}, {0x0100, 1}, {0x0100, 1}, {0x010A, 1},           \
        {0x010A, 1}, {0x010A, 1}, {0x0302, 1}, {0x0307, 1}, {0x0302, 1},       \
        {0x0307, 1}, {                                                         \
      0x0302, 1                                                                \
    }                                                                          \
  }

// Array of device type offsets
#define FIXED_DEVICE_TYPE_OFFSETS                                              \
  { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }

// Array of device type lengths
#define FIXED_DEVICE_TYPE_LENGTHS                                              \
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES                                                   \
  { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }

// Array of networks supported on each endpoint
#define FIXED_NETWORKS                                                         \
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
